// Top-level build file where you can add configuration options common to all sub-projects/modules.
println '[配置阶段代码执行test] test start'
buildscript {
    ext.kotlin_version = "1.3.72"
    repositories {
        google()
        mavenCentral()
//        maven { url 'http://maven.aliyun.com/nexus/content/groups/public' }
//        maven { url 'http://maven.aliyun.com/nexus/content/repositories/jcenter' }
//        maven { url uri('./repos') }
        maven { url uri('./dydemo/repos') }
        jcenter()
    }
    dependencies {
        println '[配置阶段代码执行test] dependencies中的代码'
        classpath "com.android.tools.build:gradle:4.2.2"
//        classpath "org.jetbrains.kotlin:kotlin-android-extensions:1.5.20"
        classpath "org.jetbrains.kotlin:kotlin-android-extensions:1.3.72"
        classpath 'com.github.dcendents:android-maven-plugin:1.2'
        classpath 'com.billy.android:autoregister:1.2.0'
//        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:1.5.20"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:1.3.72"
        classpath "org.jetbrains.kotlin:kotlin-stdlib:1.5.20"
        classpath 'com.billy.android:autoregister:1.2.0'
        classpath 'com.plugin.lib:Plugin:1.0.1'
    }
}
allprojects {
    repositories {
        google()
        mavenCentral()
        maven { url uri('./dydemo/repos') }
        jcenter()
//        maven { url 'http://maven.aliyun.com/nexus/content/groups/public' }
//        maven { url 'http://maven.aliyun.com/nexus/content/repositories/jcenter' }
//        maven { url 'https://jitpack.io' }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}
task test {
    println '[配置阶段代码执行test] Task中的配置代码'
    // 定义一个闭包
    def a = {
        println 'Task中配置的代码'
    }
    // 执行闭包
    a()
    doFirst {
        println '这段代码配置阶段不执行'
    }
}
println '[配置阶段代码执行test] test end'
ext {
    compileSdkVersion = 29
    buildToolsVersion = "30.0.1"
    minSdkVersion = 19
    targetSdkVersion = 29
    appcompat = "28.0.3"
    appcompatx = "1.0.0"
}